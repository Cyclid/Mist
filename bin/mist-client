#!/usr/bin/env ruby
# Copyright 2016 Liqwyd Ltd.
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
$LOAD_PATH.push File.expand_path('../../lib', __FILE__)

require 'optparse'
require 'logger'

# Provide our own logger
module Mist
  class << self
    attr_accessor :logger

    begin
      Mist.logger = Logger.new(STDERR)
    rescue StandardError => ex
      abort "Failed to initialize: #{ex}"
    end
  end
end

require 'mist/pool'
require 'mist/client'
require 'mist/config'

options = { distro: 'ubuntu', release: 'trusty', config: File.join(%w(/ etc mist config)) }
OptionParser.new do |opts|
  opts.on('-C', '--create', 'Create a container') do |_create|
    options[:action] = 'create'
  end

  opts.on('-D', '--destroy NAME', 'Destroy a container') do |name|
    options[:action] = 'destroy'
    options[:name] = name
  end

  opts.on('-c', '--config PATH', 'Path to the configuration file') do |path|
    options[:config] = path
  end

  opts.on('-d', '--distro DISTRO', 'Distribution name') do |distro|
    options[:distro] = distro
  end

  opts.on('-r', '--release RELEASE', 'Distribution release') do |release|
    options[:release] = release
  end
end.parse!

abort 'You must specify one of -C (--create) or -D (--destroy)' unless options.key? :action

config = Mist::Config.new(options[:config])

# Get the server pool that is shared amongst the client threads
pool = Mist::Pool.get(config.servers)

# Create a client & do the RPC
client = Mist::Client.new(pool)

result = client.call(options[:action].to_sym, options)
Mist.logger.debug "result=#{result}"
