#!/usr/bin/env ruby
$LOAD_PATH.push File.expand_path('../../lib', __FILE__)

require 'optparse'
require 'logger'

# Provide our own logger
module Mist
  class << self
    attr_accessor :logger

    begin
      Mist.logger = Logger.new(STDERR)
    rescue StandardError => ex
      abort "Failed to initialize: #{ex}"
    end
  end
end

require 'mist/pool'
require 'mist/client'

options = {distro: 'ubuntu', release: 'trusty'}
OptionParser.new do |opts|
  opts.on('-c', '--create', 'Create a container') do |create|
    options[:action] = 'create'
  end

  opts.on('-D', '--destroy NAME', 'Destroy a container') do |name|
    options[:action] = 'destroy'
    options[:name] = name
  end

  opts.on('-s', '--server SERVER', 'Hostname of the server') do |server|
    options[:server] = server
  end

  opts.on('-d', '--distro DISTRO', 'Distribution name') do |distro|
    options[:distro] = distro
  end

  opts.on('-r', '--release RELEASE', 'Distribution release') do |release|
    options[:release] = release
  end
end.parse!

abort "You must specify one of -c (--create) or -D (--destroy)" unless options.key? :action

# Get the server pool that is shared amongst the client threads
pool = Mist::Pool.get
pool.add('r1')

# Create a client & do the RPC
client = Mist::Client.new(pool)

result = client.call(options[:action].to_sym, options)
Mist.logger.debug "result=#{result}"
