#!/usr/bin/env ruby2.0
$LOAD_PATH.push File.expand_path('../../lib', __FILE__)

require 'logger'
require 'optparse'
require 'msgpack/rpc'
require 'mist/logger'
require 'mist/config'
require 'mist/handlers/gce'

options = { daemonize: false, config: File.join(%w(/ etc mist server.yml)) }
OptionParser.new do |opts|
  opts.on('-d', '--daemon', 'Run the Mist server as a background daemon') do |_daemon|
    options[:daemonize] = true
  end

  opts.on('-c', '--config PATH', 'Path to the configuration file') do |path|
    options[:config] = path
  end
end.parse!

config = Mist::Config.new(options[:config])
Mist.logger.debug config.inspect

if options[:daemonize]
  # Provide our own file logger
  Mist.logger = Logger.new(File.join(%w(/ var log mist.log)))

  # Become a daemon & start processing requests
  Process.daemon(false, false)
else
  # Log to stderr
  Mist.logger = Logger.new(STDERR)
end

# Start the RPC event loop
begin
  Mist.logger.info "Mist server starting with PID #{Process.pid}"

  server = Mist::GceServer.new(config)
  server.run
rescue StandardError => ex
  Mist.logger.error "failed to start Mist server: #{ex}"
  abort
end

Mist.logger.info 'Mist server exiting'
exit 0
